apply plugin: 'java'

group = 'spypunk'

description = "Snake clone"

repositories {
    jcenter()
}
dependencies {
    compile fileTree(include: '*.jar', dir: 'lib')
    compile 'com.google.inject:guice:4.1.0'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile('com.googlecode.soundlibs:mp3spi:1.9.5.4') {
        exclude(module: 'junit')
    }
    compile 'org.apache.commons:commons-collections4:4.1'
    testCompile 'junit:junit:4.4'
    compile project(':snake-library')
}

task libs(type: Copy){
    into ("$buildDir")
    from (configurations.runtime) {
        include ("*.jar")
        into ("/lib")
    }
}

task scripts(type: Copy){
    into ("$buildDir")
    from ("$projectDir/src/main/scripts") {
        include ("*")
        into ("/libs")
    }
}

task assets(type: Copy){
    into ("$buildDir")
    from ("$projectDir/src/main/resources/img/icons") {
        include ("icon.png")
        into ("/includes")
    }
}

/*task snakeproperties(type:Copy){
    into ("$buildDir")
    from ("$projectDir/src/main/resources-filtered") {
        include ("*.properties")
        into ("/includes")
    }
}*/

processResources{
    filesMatching('snake.properties'){
        expand(
                "project": project

        )
    }
}

task zip(dependsOn:build,type: Zip){

    archiveName "$rootProject.name-$version" + ".zip"
    from ("$buildDir/libs"){
        include "*"
        into "/"
    }
    from ("$buildDir/lib") {
        include "**/*"
        into "lib"
    }
    from ("$buildDir/includes"){
        include "*"
        into "/"
    }
    destinationDir file("$buildDir")
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { "lib/" + it.getName() }.join(' '),
                "Main-Class": "spypunk.snake.Main"
        )
    }
    archiveName "snake.jar"
}

build.dependsOn(libs,scripts,assets)
